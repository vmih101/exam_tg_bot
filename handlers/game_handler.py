from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from states.game_states import GameAttempts
from utils.random_number import random_number
from random import randint


async def start_guess_number(message: types.Message):
    await message.reply("–î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º. –Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç –æ–¥–Ω–æ–≥–æ –¥–æ –¥–µ—Å—è—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å —Å —Ç—Ä—ë—Ö –ø–æ–ø—ã—Ç–æ–∫."
                        " –ü–æ–ø—ã—Ç–∫–∞ –Ω–æ–º–µ—Ä 1...")
    global random_number
    random_number = str(randint(1, 10))
    print(random_number)
    await GameAttempts.A1.set()


async def handle_a1_answer(message: types.Message, state: FSMContext):
    answer = message.text
    if answer == random_number:
        await message.answer("üéâ C—É–ø–µ—Ä! –¢—ã –æ—Ç–≥–∞–¥–∞–ª —Å –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏! –ß–µ–º –∑–∞–π–º—ë–º—Å—è –¥–∞–ª—å—à–µ?")
        await state.finish()
    else:
        await message.answer("ü•≤ –ü–æ–∫–∞ –º–∏–º–æ. –ü—Ä–æ–±—É–µ–º –¥–∞–ª—å—à–µ. –ü–æ–ø—ã—Ç–∫–∞ –Ω–æ–º–µ—Ä 2...")
        await GameAttempts.A2.set()


async def handle_a2_answer(message: types.Message, state: FSMContext):
    answer = message.text
    if answer == random_number:
        await message.answer("üéâ –ê–±—Å–æ–ª—é—Ç–Ω–æ –≤–µ—Ä–Ω–æ! –ß–µ–º –∑–∞–π–º—ë–º—Å—è –¥–∞–ª—å—à–µ?")
        await state.finish()
    else:
        await message.answer("ü•≤ –ù–µ –≤–µ—Ä–Ω–æ. –ù–µ –æ—Ç—á–∞–∏–≤–∞–π—Å—è, —É —Ç–µ–±—è –æ—Å—Ç–∞–ª–∞—Å—å –µ—â—ë –æ–¥–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞. –ü–æ–ø—ã—Ç–∫–∞ –Ω–æ–º–µ—Ä 3...")
        await GameAttempts.A3.set()


async def handle_a3_answer(message: types.Message, state: FSMContext):
    answer = message.text
    if answer == random_number:
        await message.answer("üéä üéä üéä –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –≤—Å—ë —Ç–∞–∫–∏ —É–≥–∞–¥–∞–ª! –ß–µ–º –∑–∞–π–º—ë–º—Å—è –¥–∞–ª—å—à–µ?")
        await state.finish()
    else:
        await message.answer("ü•≤ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Å–Ω–æ–≤–∞ –Ω–µ –≤–µ—Ä–Ω–æ. –ù–∏—á–µ–≥–æ, –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–≤–µ–∑—ë—Ç. –í—ã–±–µ—Ä–∏ "
                             "–¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é...")
        await state.finish()


def register_game_handlers(dp: Dispatcher):
    dp.register_message_handler(start_guess_number, commands=['–ò–≥—Ä–∞_—É–≥–∞–¥–∞–π_—á–∏—Å–ª–æüé≤'])
    dp.register_message_handler(handle_a1_answer, state=GameAttempts.A1)
    dp.register_message_handler(handle_a2_answer, state=GameAttempts.A2)
    dp.register_message_handler(handle_a3_answer, state=GameAttempts.A3)




